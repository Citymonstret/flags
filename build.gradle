buildscript {
    repositories {
        mavenCentral()
        maven { url = 'https://oss.sonatype.org/content/repositories/snapshots/' }
        jcenter()
    }
    dependencies {
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "1.4.21"
    id "de.marcphilipp.nexus-publish" version "0.4.0"
    id "org.jetbrains.dokka" version "1.4.0"
}

group "cloud.commandframework"
version "1.0.0"
description "Type safe serializable properties"

apply plugin: "org.jetbrains.kotlin.jvm"
apply plugin: "idea"
apply plugin: "signing"
apply plugin: "de.marcphilipp.nexus-publish"
apply plugin: "org.jetbrains.dokka"

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    withJavadocJar()
    withSourcesJar()
}

task dokkaJavadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    archiveClassifier.set("javadoc")
    from new File(buildDir, "/dokka/javadoc/")
}

task dokkaSourcesJar(type: Jar) {
    archiveClassifier.set("sources")
    from sourceSets.main.allSource
}

repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.4.21"
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.4.21"

    testImplementation "org.junit.jupiter:junit-jupiter"
    testImplementation platform("org.junit:junit-bom:5.7.0")
}

nexusPublishing {
    repositories {
        sonatype()
    }
}

sourceCompatibility = '1.8'

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            pom {
                name = project.name
                url = 'https://github.com/Incendo/flags'
                description = project.description

                developers {
                    developer {
                        id = 'Sauilitired'
                        name = 'Alexander SÃ¶derberg'
                        url = 'https://alexander-soderberg.com'
                        email = 'contact@alexander-soderberg.com'
                    }
                }

                issueManagement {
                    system = 'GitHub Issues'
                    url = 'https://github.com/Incendo/flags/issues'
                }

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }

                scm {
                    connection = 'scm:git@github.com:Incendo/flags.git'
                    developerConnection = 'scm:git@github.com:Incendo/flags.git'
                    url = 'https://github.com/Incendo/flags/'
                }
            }
        }
    }
}

signing {
    required {
        project.hasProperty('signing.keyId') && (gradle.taskGraph.hasTask(':publish')
                || gradle.taskGraph.hasTask(':publishToSonatype')
                || gradle.taskGraph.hasTask(':publishToMavenLocal'))
    }
    sign publishing.publications.mavenJava
}


